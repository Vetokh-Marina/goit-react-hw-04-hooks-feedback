{"version":3,"sources":["components/Notification/Notification.module.css","components/Section/Section.js","components/Feedback/Feedback.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/Feedback/Feedback.module.css","components/Section/Section.module.css","components/Statistics/Statistics.module.css"],"names":["module","exports","Section","title","children","className","s","section","FeedbackOptions","options","onLeaveFeedback","list","map","option","onClick","button","name","shortid","generate","Statistics","good","neutral","bad","total","positivePercentage","statisticList","Notification","message","notification","App","useState","setGood","setNeutral","setBad","countTotalFeedback","item","prevState","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4IACAA,EAAOC,QAAU,CAAC,aAAe,qC,sICEjB,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxC,OACE,sBAAKC,UAAYC,IAAEC,QAAnB,UACE,6BAAKJ,IACJC,K,oCCHS,SAASI,EAAT,GAGZ,IAFFC,EAEC,EAFDA,QACAC,EACC,EADDA,gBAEA,OACE,oBAAIL,UAAWC,IAAEK,KAAjB,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,6BACE,wBACEC,QAAS,kBAAMJ,EAAgBG,IAC/BR,UAAWC,IAAES,OACbC,KAAMH,EAHR,SAKGA,KANII,IAAQC,iB,oBCRV,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qBAAInB,UAAWC,IAAEmB,cAAjB,UACE,6BACE,uCAAUL,OAEZ,6BACE,0CAAaC,OAEf,6BACE,sCAASC,OAEX,6BACE,wCAAWC,OAEb,6BACE,oDAAuBC,EAAvB,Y,qBCtBO,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGtB,UAAWC,IAAEsB,aAAhB,SAA+BD,ICEzB,SAASE,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBV,EADqB,KACfW,EADe,OAEED,mBAAS,GAFX,mBAErBT,EAFqB,KAEZW,EAFY,OAGNF,mBAAS,GAHH,mBAGrBR,EAHqB,KAGhBW,EAHgB,KAqBtBC,EAAqB,WACzB,OAAOd,EAAOC,EAAUC,GAO1B,OACE,gCACE,cAACpB,EAAD,CAASC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEM,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBA7BgB,SAAAyB,GACtB,OAAQA,GACN,IAAK,OACH,OAAOJ,GAAQ,SAAAK,GAAS,OAAIA,EAAY,KAE1C,IAAK,UACH,OAAOJ,GAAW,SAAAI,GAAS,OAAIA,EAAY,KAE7C,IAAK,MACH,OAAOH,GAAO,SAAAG,GAAS,OAAIA,EAAY,KAEzC,QACE,aAoBF,cAAClC,EAAD,CAASC,MAAM,aAAf,SAC4B,IAAzB+B,IACC,cAACR,EAAD,CAAcC,QAAQ,sBAEtB,cAACR,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOW,IACPV,mBApBDa,KAAKC,MAAc,IAAPlB,EAAcc,YC3BrCK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACZ,EAAD,MAEFa,SAASC,eAAe,U,kBCR1B3C,EAAOC,QAAU,CAAC,KAAO,uBAAuB,OAAS,2B,kBCAzDD,EAAOC,QAAU,CAAC,QAAU,2B,kBCA5BD,EAAOC,QAAU,CAAC,cAAgB,kCAAkC,aAAe,oC","file":"static/js/main.d2cddcf1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2DL4l\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\n export default function Section({ title, children }) {\r\n  return (\r\n    <div className ={s.section}>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};","import PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport s from './Feedback.module.css';\r\n\r\n export default function FeedbackOptions({\r\n  options,\r\n  onLeaveFeedback,\r\n}) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {options.map(option => (\r\n        <li key={shortid.generate()}>\r\n          <button\r\n            onClick={() => onLeaveFeedback(option)}\r\n            className={s.button}\r\n            name={option}\r\n          >\r\n            {option}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <ul className={s.statisticList}>\r\n      <li>\r\n        <p>Good: {good}</p>\r\n      </li>\r\n      <li>\r\n        <p>Neutral: {neutral}</p>\r\n      </li>\r\n      <li>\r\n        <p>Bad: {bad}</p>\r\n      </li>\r\n      <li>\r\n        <p>Total: {total}</p>\r\n      </li>\r\n      <li>\r\n        <p>Positive feedback: {positivePercentage}%</p>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nexport default function Notification({ message }) {\r\n  return <p className={s.notification}>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};","import { useState } from 'react';\r\nimport Section from './components/Section';\r\nimport Feedback from './components/Feedback';\r\nimport Statistics from './components/Statistics';\r\nimport Notification from './components/Notification';\r\n\r\nexport default function App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const clickActiveItem = item => {\r\n    switch (item) {\r\n      case 'good':\r\n        return setGood(prevState => prevState + 1);\r\n\r\n      case 'neutral':\r\n        return setNeutral(prevState => prevState + 1);\r\n\r\n      case 'bad':\r\n        return setBad(prevState => prevState + 1);\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const countTotalFeedback = () => {\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    return Math.round((good * 100) / countTotalFeedback());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Section title=\"Please leave feedback\">\r\n        <Feedback\r\n          options={['good', 'neutral', 'bad']}\r\n          onLeaveFeedback={clickActiveItem}\r\n        />\r\n      </Section>\r\n      <Section title=\"Statistics\">\r\n        {countTotalFeedback() === 0 ? (\r\n          <Notification message=\"No feedback given\"></Notification>\r\n        ) : (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={countTotalFeedback()}\r\n            positivePercentage={countPositiveFeedbackPercentage()}\r\n          />\r\n        )}\r\n      </Section>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Feedback_list__1yCxx\",\"button\":\"Feedback_button__PSWWx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2_pg9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticList\":\"Statistics_statisticList__4Oe12\",\"positivefeed\":\"Statistics_positivefeed__3pfQ1\"};"],"sourceRoot":""}